
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AffiliateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  id_account: 'id_account'
};

exports.Prisma.Auth_accountScalarFieldEnum = {
  id: 'id',
  password: 'password',
  id_provider: 'id_provider',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  id_token: 'id_token',
  access_token_expires_at: 'access_token_expires_at',
  refresh_token_expires_at: 'refresh_token_expires_at',
  scope: 'scope',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id_user: 'id_user',
  id_account: 'id_account'
};

exports.Prisma.Auth_sessionScalarFieldEnum = {
  id: 'id',
  expires_at: 'expires_at',
  token: 'token',
  created_at: 'created_at',
  updated_at: 'updated_at',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  id_user: 'id_user'
};

exports.Prisma.Auth_two_factorScalarFieldEnum = {
  id: 'id',
  secret: 'secret',
  backup_codes: 'backup_codes',
  id_user: 'id_user'
};

exports.Prisma.Auth_userScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  email_verified: 'email_verified',
  image: 'image',
  created_at: 'created_at',
  updated_at: 'updated_at',
  username: 'username',
  display_username: 'display_username',
  two_factor_enabled: 'two_factor_enabled',
  id_customer: 'id_customer',
  id_author: 'id_author',
  id_affiliate: 'id_affiliate',
  id_publisher: 'id_publisher',
  id_internal: 'id_internal'
};

exports.Prisma.Auth_verificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AuthorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  id_account: 'id_account'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  title: 'title',
  banner_file: 'banner_file',
  status: 'status',
  deleted_at: 'deleted_at',
  link: 'link'
};

exports.Prisma.BookScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  alias: 'alias',
  submitted_price: 'submitted_price',
  desc: 'desc',
  info: 'info',
  status: 'status',
  currency: 'currency',
  deleted_at: 'deleted_at',
  img_file: 'img_file',
  cover: 'cover',
  product_file: 'product_file',
  sku: 'sku',
  id_author: 'id_author',
  published_date: 'published_date',
  is_physical: 'is_physical',
  ai_suggested_content: 'ai_suggested_content',
  preorder_min_qty: 'preorder_min_qty',
  content_type: 'content_type',
  is_chapter: 'is_chapter',
  id_product: 'id_product'
};

exports.Prisma.Book_approvalScalarFieldEnum = {
  id: 'id',
  id_book: 'id_book',
  id_internal: 'id_internal',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.Book_genreScalarFieldEnum = {
  id: 'id',
  id_genre: 'id_genre',
  id_book: 'id_book'
};

exports.Prisma.Book_historyScalarFieldEnum = {
  book_id: 'book_id',
  created_at: 'created_at',
  description: 'description'
};

exports.Prisma.Book_tagsScalarFieldEnum = {
  id: 'id',
  id_tags: 'id_tags',
  id_book: 'id_book'
};

exports.Prisma.BundleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  strike_price: 'strike_price',
  real_price: 'real_price',
  currency: 'currency',
  desc: 'desc',
  info: 'info',
  deleted_at: 'deleted_at',
  status: 'status',
  img_file: 'img_file',
  cover: 'cover',
  sku: 'sku'
};

exports.Prisma.Bundle_categoryScalarFieldEnum = {
  id: 'id',
  id_category: 'id_category',
  id_bundle: 'id_bundle'
};

exports.Prisma.Bundle_productScalarFieldEnum = {
  id_bundle: 'id_bundle',
  id_product: 'id_product',
  id: 'id',
  qty: 'qty'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  id_parent: 'id_parent',
  deleted_at: 'deleted_at',
  slug: 'slug',
  img: 'img'
};

exports.Prisma.ChapterScalarFieldEnum = {
  id: 'id',
  id_product: 'id_product',
  number: 'number',
  name: 'name'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  whatsapp: 'whatsapp',
  deleted_at: 'deleted_at',
  otp: 'otp',
  id_account: 'id_account',
  name: 'name',
  email: 'email'
};

exports.Prisma.Customer_readerScalarFieldEnum = {
  id: 'id',
  id_customer: 'id_customer',
  id_product: 'id_product',
  last_page: 'last_page',
  percent: 'percent'
};

exports.Prisma.Customer_trackScalarFieldEnum = {
  id: 'id',
  ts: 'ts',
  id_customer: 'id_customer',
  path: 'path',
  referrer: 'referrer',
  info: 'info',
  ip: 'ip'
};

exports.Prisma.GenreScalarFieldEnum = {
  id: 'id',
  name: 'name',
  id_parent: 'id_parent',
  slug: 'slug',
  img: 'img',
  deleted_at: 'deleted_at'
};

exports.Prisma.InternalScalarFieldEnum = {
  id: 'id',
  id_account: 'id_account',
  name: 'name',
  is_sales_and_marketing: 'is_sales_and_marketing',
  is_support: 'is_support',
  is_management: 'is_management',
  is_it: 'is_it'
};

exports.Prisma.LandingScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  views: 'views',
  deleted_at: 'deleted_at',
  status: 'status',
  title: 'title'
};

exports.Prisma.Landing_itemsScalarFieldEnum = {
  id: 'id',
  desc: 'desc',
  img_file: 'img_file',
  tag: 'tag',
  link_to: 'link_to',
  landing_id: 'landing_id',
  idx: 'idx',
  color: 'color'
};

exports.Prisma.MidtrxScalarFieldEnum = {
  id: 'id',
  tz: 'tz',
  type: 'type',
  payload: 'payload'
};

exports.Prisma.PreorderScalarFieldEnum = {
  id: 'id',
  id_product: 'id_product',
  min_qty: 'min_qty',
  current_qty: 'current_qty',
  status: 'status',
  deadline: 'deadline'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  alias: 'alias',
  strike_price: 'strike_price',
  real_price: 'real_price',
  desc: 'desc',
  info: 'info',
  status: 'status',
  currency: 'currency',
  deleted_at: 'deleted_at',
  img_file: 'img_file',
  cover: 'cover',
  product_file: 'product_file',
  sku: 'sku',
  id_author: 'id_author',
  published_date: 'published_date',
  is_physical: 'is_physical',
  ai_suggested_content: 'ai_suggested_content',
  preorder_min_qty: 'preorder_min_qty',
  content_type: 'content_type',
  is_chapter: 'is_chapter'
};

exports.Prisma.Product_categoryScalarFieldEnum = {
  id_product: 'id_product',
  id_category: 'id_category',
  id: 'id'
};

exports.Prisma.Promo_codeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  valid_from: 'valid_from',
  valid_to: 'valid_to',
  usage_limit: 'usage_limit',
  used_count: 'used_count',
  status: 'status',
  id_publisher: 'id_publisher'
};

exports.Prisma.PublisherScalarFieldEnum = {
  id: 'id',
  id_account: 'id_account',
  name: 'name'
};

exports.Prisma.Publisher_authorScalarFieldEnum = {
  id: 'id',
  publisher_id: 'publisher_id',
  author_id: 'author_id'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  id_book: 'id_book',
  comments: 'comments',
  rating: 'rating',
  created_at: 'created_at',
  deleted_at: 'deleted_at',
  parent: 'parent',
  id_user: 'id_user'
};

exports.Prisma.Reviews_likesScalarFieldEnum = {
  id: 'id',
  id_reviews: 'id_reviews',
  id_user: 'id_user'
};

exports.Prisma.T_ai_creditScalarFieldEnum = {
  id: 'id',
  id_publisher: 'id_publisher',
  balance: 'balance',
  last_topup_at: 'last_topup_at'
};

exports.Prisma.T_ai_credit_topupScalarFieldEnum = {
  id: 'id',
  id_t_ai_credit: 'id_t_ai_credit',
  amount: 'amount',
  created_at: 'created_at',
  status: 'status'
};

exports.Prisma.T_salesScalarFieldEnum = {
  id: 'id',
  id_customer: 'id_customer',
  status: 'status',
  total: 'total',
  currency: 'currency',
  info: 'info',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  midtrans_order_id: 'midtrans_order_id',
  midtrans_success: 'midtrans_success',
  midtrans_pending: 'midtrans_pending',
  midtrans_error: 'midtrans_error'
};

exports.Prisma.T_sales_downloadScalarFieldEnum = {
  id: 'id',
  id_product: 'id_product',
  id_customer: 'id_customer',
  downloaded_at: 'downloaded_at',
  ip_address: 'ip_address',
  download_key: 'download_key'
};

exports.Prisma.T_sales_lineScalarFieldEnum = {
  id: 'id',
  id_sales: 'id_sales',
  unit_price: 'unit_price',
  qty: 'qty',
  total_price: 'total_price',
  id_product: 'id_product',
  id_bundle: 'id_bundle'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  id_parent: 'id_parent',
  deleted_at: 'deleted_at',
  slug: 'slug',
  img: 'img'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  id_publisher: 'id_publisher',
  type: 'type',
  amount: 'amount',
  created_at: 'created_at',
  info: 'info'
};

exports.Prisma.WithdrawalScalarFieldEnum = {
  id: 'id',
  id_publisher: 'id_publisher',
  amount: 'amount',
  status: 'status',
  requested_at: 'requested_at',
  processed_at: 'processed_at'
};

exports.Prisma.RankingScalarFieldEnum = {
  id: 'id',
  id_book: 'id_book'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  affiliate: 'affiliate',
  auth_account: 'auth_account',
  auth_session: 'auth_session',
  auth_two_factor: 'auth_two_factor',
  auth_user: 'auth_user',
  auth_verification: 'auth_verification',
  author: 'author',
  banner: 'banner',
  book: 'book',
  book_approval: 'book_approval',
  book_genre: 'book_genre',
  book_history: 'book_history',
  book_tags: 'book_tags',
  bundle: 'bundle',
  bundle_category: 'bundle_category',
  bundle_product: 'bundle_product',
  category: 'category',
  chapter: 'chapter',
  customer: 'customer',
  customer_reader: 'customer_reader',
  customer_track: 'customer_track',
  genre: 'genre',
  internal: 'internal',
  landing: 'landing',
  landing_items: 'landing_items',
  midtrx: 'midtrx',
  preorder: 'preorder',
  product: 'product',
  product_category: 'product_category',
  promo_code: 'promo_code',
  publisher: 'publisher',
  publisher_author: 'publisher_author',
  reviews: 'reviews',
  reviews_likes: 'reviews_likes',
  t_ai_credit: 't_ai_credit',
  t_ai_credit_topup: 't_ai_credit_topup',
  t_sales: 't_sales',
  t_sales_download: 't_sales_download',
  t_sales_line: 't_sales_line',
  tags: 'tags',
  transaction: 'transaction',
  withdrawal: 'withdrawal',
  ranking: 'ranking'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
